import "pkg:/source/roku_modules/maestro/core/Utils.brs"
import "pkg:/source/roku_modules/maestro/ml/ListMixin.brs"
import "pkg:/source/roku_modules/maestro/ml/RowItemScroller.brs"
import "pkg:/source/roku_modules/maestro/ml/RowItemViewManager.brs"
import "pkg:/source/roku_modules/maestro/view/BaseView.brs"
import "pkg:/source/roku_modules/maestro/ml/cells/BaseCell.brs"
import "pkg:/source/roku_modules/maestro/view/Animation.brs"

@node("LongCell", "ml_BaseCell")
class LongCell extends ml.BaseCell
  private poster as mc.types.node
  private bgRect as mc.types.node
  private label as mc.types.node

  function new()
    super()
  end function

  protected override function createViews() as void
    m.bgRect = mc.createSGNode("mv_Rectangle", m.top, "bgRect", {
      size: [1192, 144]
      ' color: "#000000"
      visible: false
    })
    m.poster = mc.createSGNode("mv_Poster", m.top, "poster", {
      translation: [24, 16]
      loadingBitmapUri: "http://via.placeholder.com/80x80"
      failedBitmapUri: "http://via.placeholder.com/80x80"
      uri: "http://via.placeholder.com/80x80"
      loadWidth: 80
      loadHeight: 80
      size: [80, 80]
      loadDisplayMode: "zoomToFill"
    })
    m.label = mc.createSGNode("mv_Label", m.top, "label", {
      fontKey: "mediumBold,50"
      horizAlign: "left"
      vertAlign: "center"
      color: "#ffffff"
      translation: [120, 32]
      size: [984, 48]
    })
  end function

  protected override function onShowWithContent(content as mc.types.node)
    m.poster.uri = content.HDGRIDPOSTERURL
    m.label.text = `${m.index} ${content.title}`
    m.label.fontKey = "medium,30"
    m.label.color = "#aaaaaa"
  end function

  protected override function onHide()
    m.label.fontKey = "medium,30"
    m.label.color = "#aaaaaa"
  end function

  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  '++ delegate
  '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


  ' private function onScrollingChange(isScrolling as boolean, isLong as boolean)
  '   if not isScrolling
  '     m.label.visible = true
  '   end if
  ' end function

  ' private function onScrollingUpdate(startIndex as integer, currentIndex as integer)
  '   textVisible = abs(startIndex - currentIndex) < 2
  '   m.label.visible = textVisible
  ' end function


  private function onWillGainFocus(event as ml.ListEvent)
    if m.index = 3
    end if
    ' ? "SC: onCellWillGainFocus " ; m.index ; " " ; direction

  end function

  private function onWillLoseFocus(event as ml.ListEvent)
    ' ? "SC: onCellWillLoseFocus " ; m.index ; " " ; direction
    m.label.fontKey = "medium,30"
    m.label.color = "#aaaaaa"

  end function

  private function onDidGainFocus(event as ml.ListEvent)
    ' ? "SC: onCellDidGainFocus " ; m.index ; " " ; direction
    m.setScale(1, true)
    m.label.fontKey = "mediumBold,40"
    m.label.color = "#ffffff"
  end function

  private function onDidLoseFocus(event as ml.ListEvent)
    ' ? "SC: onCellDidLoseFocus " ; m.index ; " " ; direction
    m.label.fontKey = "medium,30"
    m.label.color = "#aaaaaa"
    m.setScale(1, false)
  end function

  private function onGainingFocus(event as ml.ListEvent)
    ' ? "SC: onGainingFocus " ; m.index ; " " ; direction ; " " ; event.fraction
    m.setScale(event.fraction, true)
    if event.fraction > 0.8
      m.label.fontKey = "mediumBold,40"
      m.label.color = "#ffffff"
    end if
  end function

  private function onLosingFocus(event as ml.ListEvent)
    ' ? "SC: onLosingFocus " ; m.index ; " " ; direction ; " " ; event.fraction
    m.setScale(event.fraction, false)
    if event.fraction > 0.8
      m.label.fontKey = "mediumBold,30"
      m.label.color = "#aaaaaa"
    end if

  end function

  private function setScale(fraction as float, isGaining as boolean) as void
    ' if isGaining
    '   m.scale = (event.fraction + 0.3)
    ' else
    '   m.scale = (1 - event.fraction) + 0.3
    ' end if
    ' m.scale = m.scale * 0.8
    ' m.poster.width = m.posterSize[0] * m.scale
    ' m.poster.height = m.posterSize[1] * m.scale

    ' if isGaining
    '   m.poster.opacity = 0.3 + event.fraction
    ' else
    '   m.poster.opacity = 0.3 + (1 - event.fraction)
    ' end if
  end function

end class
